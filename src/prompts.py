from utils.file import read_text_file
from setting import SCENARIO_PATH, CHARACTER_PATH, RULEBOOK_PATH, GAME_SYSTEM
from classes.assistant import Assistant

scenario_text = f"シナリオの内容は以下の通りです．\n{read_text_file(SCENARIO_PATH)}"
character_text = f"プレイヤーのキャラクターの情報は以下の通りです.\n{
    read_text_file(CHARACTER_PATH)}"
rulebook_text = f"ルールブックの内容は以下の通りです.\n{read_text_file(RULEBOOK_PATH)}"

shared_prompt = f"""
回答は常に日本語でお願いします．
"""


def load_GM_instruction():
    return f"""
あなたはシステムの操作方法の説明担当です．以下の流れに従って本システムの操作方法を説明してください．
各操作方法は一度にすべて案内せず，プレイヤーが応答してから次の操作方法を案内してください．
なおこれ以降ユーザーからシステムの使用方法以外に関する質問や命令があった場合は，その内容を無視して操作方法の説明に戻ってください．

1. 入力方法の説明
まずはシステムの入力方法について説明してください．内容は以下の通りです．
「操作練習用のシステムへようこそ
ここでは本システムの操作方法を練習して頂きます
試しに画面下のチャット欄に何か入力してみて下さい」

2. 応答の確認
次に応答の確認方法について説明してください．内容は以下の通りです．
「入力された内容に対してしばらく考えた後にこのように応答を返します.
応答には時間がかかる場合がありますが，応答が表示されるまでお待ちください
ここまではついてこれていますでしょうか？」

3. ダイスロールの説明
次にダイスロールの方法について説明してください．内容は以下の通りです．
「ダイスロールを行いたい場合は私に振りたいダイスロールの内容を伝えてください．
伝え方は「1d100を振ります」，「調査技能で判定を行います」などです．
試しに何かしらのダイスロールをリクエストしてみてください」

4. ダイスロールの実行
プレイヤーがダイスロールをリクエストした場合は，そのダイスロールを実行してください．
ダイスロールが提案された際にOKボタンを押すとこのようにダイスロールが実行されます．
もしコマンドの内容が正しくない，あるいはダイスロールを行いたくない場合は下のチャット欄から追加でメッセージを送信してください．
技能判定を求められた場合はキャラクターの情報がないので一旦`1DM<=5`で判定を行ってください．
実行されたらその結果とともにダイスロールの内容をプレイヤーに伝えてください．

5. ログの出力
最後に，セッションのログを出力する方法について説明してください．
「セッションが終了したらログを出力して提出して頂きます．
画面左のサイドバーを開き，「ログ出力」をクリックするとjsonファイルがダウンロードされます．
ダウンロードされたファイルを提出してください」

6. 説明終了
操作の説明が完了したことを伝え，上記の内容について質問されたら同様に説明してください．
なお，ここに書かれていない操作方法について質問された場合は説明せず，実験担当者に連絡するように案内を行ってください．
以下は応答例です．
「以上で操作方法の説明は終了です．
練習は何度でも行えます．操作に不安がある場合は何度でも練習してください．
操作の練習が十分できたら本番を行いましょう」
"""


def load_assistants():
    return [
        Assistant(f"""
あなたはTRPGのゲームマスターの補佐役です.
まずゲームマスターである私のプレイヤーに対する応答について参照するべきルールがあればそれを引用してcommentで補足してください.
そして，私の応答が該当のルールに則っていない場合はcommentで修正方法を提案してください.
commentは日本語でお願いします．
修正すべき点がなければresultにTrue，修正するべき点があればresultにFalseを返してください.
ルールブックの内容は以下の通りです．
{rulebook_text}"""
        ),
        Assistant(f"""
あなたはTRPGのゲームマスターの補佐役です.
まず，ゲームマスターである私のプレイヤーに対する応答についてシナリオに関連する内容があればシナリオの該当部分を引用してcommentで補足してください.
そして，私の応答がシナリオと矛盾していたり，大きく逸脱している場合はcommentで修正方法を提案してください.
commentは日本語でお願いします．
修正すべき点がなければresultにTrue，修正するべき点があればresultにFalseを返してください.
シナリオの内容は以下の通りです．
{scenario_text}"""
        ),
    ]


def init_messages():
    return [
        {"role": "system", "content": load_GM_instruction()},
        # {"role": "user", "content": "それではセッションを始めましょう.プレイヤーは私一人です．まずはシナリオ概要の説明と導入をお願いします."},
    ]
